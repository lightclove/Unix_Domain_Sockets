'''
Функция socketpair() полезна для настройки сокетов UDS для межпроцессного взаимодействия Unix.
ОС создает пару соединенных сокетов, которые можно использовать для связи между родительским процессом и дочерним процессом
после разветвления дочернего процесса.
Что если вам нужен pipe (), но вы хотите использовать один канал для отправки и получения данных с обеих сторон? Т
ак как каналы являются однонаправленными (за исключением SYSV), вы не можете этого сделать!
Однако есть решение: использовать сокет домена Unix, поскольку он могут обрабатывать двунаправленные данные.
для передачи данных в обе стороны!
Позволяет вернуть вам пару уже подключенных сокетов и использовать эти дескрипторы сокетов для межпроцессного взаимодействия.
'''
import socket
import os

parent, child = socket.socketpair()

pid = os.fork()

if pid:
    print('in parent, sending message')
    child.close()
    parent.sendall(b'ping')
    response = parent.recv(1024)
    print('response from child:', response)
    parent.close()

else:
    print('in child, waiting for message')
    parent.close()
    message = child.recv(1024)
    print('message from parent:', message)
    child.sendall(b'pong')
    child.close()

'''
По умолчанию создается сокет UDS. 
Кроме того, вызывающая сторона может передать 
семейство адресов, тип сокета и параметры протокола, чтобы указать, как должны создаваться сокеты.
'''